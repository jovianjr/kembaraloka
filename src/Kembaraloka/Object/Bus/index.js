/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
import { useSpring, animated } from '@react-spring/three';
import * as THREE from 'three';
import { PerspectiveCamera } from '@react-three/drei';
import RenderIf from 'Components/Element/RenderIf';

export default function Model({ ...props }) {
	const { nodes, materials } = useGLTF(
		`${process.env.NEXT_PUBLIC_BASE_URL}/assets/kembaraloka/Trans_Gadjah_Mada.glb`
	);
	const { tourRoute } = props;
	const busRef = useRef();
	const camPosRef = useRef();
	const camRef = useRef();
	const [counter, setCounter] = useState(0);
	const maxPosition = tourRoute.length;

	const { position } = useSpring({
		config: { duration: 8000 },
		position: [
			tourRoute[counter].x,
			props.tourMode ? -0.05 : 0,
			tourRoute[counter].z
		]
	});

	useFrame(state => {
		if (busRef.current && counter !== undefined) {
			if (camRef.current) {
				const vectorLookAt = props.controls.current.target;
				const lookAt = new THREE.Vector3(
					tourRoute[counter].offset.x,
					0,
					tourRoute[counter].offset.z
				);
				camRef.current.lookAt(vectorLookAt.lerp(lookAt, 0.1));
			}

			busRef.current.lookAt(
				tourRoute[counter].x,
				props.tourMode ? -0.05 : 0,
				tourRoute[counter].z
			);

			if (
				busRef.current?.position?.x === tourRoute[counter].x &&
				busRef.current?.position?.z === tourRoute[counter].z
			) {
				setCounter(prevState => {
					if (prevState === maxPosition - 1) return 0;
					return prevState + 1;
				});
			}
		}
	});

	return (
		<>
			<RenderIf when={props.tourMode}>
				<animated.group
					ref={camPosRef}
					position={position}
					{...props}
					dispose={null}
				>
					<PerspectiveCamera ref={camRef} makeDefault>
						<group
							name="Tayo"
							rotation={[Math.PI / 2, 0, 0]}
							scale={0.7601}
							position={[0, -0.65, -0.25]}
						>
							<mesh
								name="Plane002"
								geometry={nodes.Plane002.geometry}
								material={materials['YELLOW_KONSTRUKSI.001']}
							/>
							<mesh
								name="Plane002_1"
								geometry={nodes.Plane002_1.geometry}
								material={materials['Neutral800_SV.001']}
							/>
							<mesh
								name="Plane002_2"
								geometry={nodes.Plane002_2.geometry}
								material={materials['Blue500_SEPEDA_KAMPUS.001']}
							/>
							<mesh
								name="Plane002_3"
								geometry={nodes.Plane002_3.geometry}
								material={materials.Neutral50}
							/>
							<mesh
								name="Plane002_4"
								geometry={nodes.Plane002_4.geometry}
								material={materials.Red500_SV}
							/>
							<mesh
								name="Plane002_5"
								geometry={nodes.Plane002_5.geometry}
								material={materials['Blue500_SEPEDA_KAMPUS.002']}
							/>
							<mesh
								name="Plane002_6"
								geometry={nodes.Plane002_6.geometry}
								material={materials.Neutral300_SV}
							/>
							<mesh
								name="Plane002_7"
								geometry={nodes.Plane002_7.geometry}
								material={materials.Neutral900_FIB}
							/>
							<mesh
								name="Plane002_8"
								geometry={nodes.Plane002_8.geometry}
								material={materials.Neutral600}
							/>
						</group>
					</PerspectiveCamera>
				</animated.group>
			</RenderIf>
			<animated.group
				ref={busRef}
				position={position}
				dispose={null}
				{...props}
			>
				<group name="Tayo" rotation={[Math.PI / 2, 0, -3.1241]} scale={0.7601}>
					<mesh
						name="Plane002"
						geometry={nodes.Plane002.geometry}
						material={materials['YELLOW_KONSTRUKSI.001']}
					/>
					<mesh
						name="Plane002_1"
						geometry={nodes.Plane002_1.geometry}
						material={materials['Neutral800_SV.001']}
					/>
					<mesh
						name="Plane002_2"
						geometry={nodes.Plane002_2.geometry}
						material={materials['Blue500_SEPEDA_KAMPUS.001']}
					/>
					<mesh
						name="Plane002_3"
						geometry={nodes.Plane002_3.geometry}
						material={materials.Neutral50}
					/>
					<mesh
						name="Plane002_4"
						geometry={nodes.Plane002_4.geometry}
						material={materials.Red500_SV}
					/>
					<mesh
						name="Plane002_5"
						geometry={nodes.Plane002_5.geometry}
						material={materials['Blue500_SEPEDA_KAMPUS.002']}
					/>
					<mesh
						name="Plane002_6"
						geometry={nodes.Plane002_6.geometry}
						material={materials.Neutral300_SV}
					/>
					<mesh
						name="Plane002_7"
						geometry={nodes.Plane002_7.geometry}
						material={materials.Neutral900_FIB}
					/>
					<mesh
						name="Plane002_8"
						geometry={nodes.Plane002_8.geometry}
						material={materials.Neutral600}
					/>
				</group>
			</animated.group>
		</>
	);
}

useGLTF.preload(
	`${process.env.NEXT_PUBLIC_BASE_URL}/assets/kembaraloka/Trans_Gadjah_Mada.glb`
);
